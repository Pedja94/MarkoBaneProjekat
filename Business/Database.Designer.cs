#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Business
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="ZipMoving")]
	public partial class DatabaseDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertAdmin(Admin instance);
    partial void UpdateAdmin(Admin instance);
    partial void DeleteAdmin(Admin instance);
    partial void InsertZipCode(ZipCode instance);
    partial void UpdateZipCode(ZipCode instance);
    partial void DeleteZipCode(ZipCode instance);
    partial void InsertCalendar(Calendar instance);
    partial void UpdateCalendar(Calendar instance);
    partial void DeleteCalendar(Calendar instance);
    partial void InsertInformation(Information instance);
    partial void UpdateInformation(Information instance);
    partial void DeleteInformation(Information instance);
    partial void InsertInventoryItem(InventoryItem instance);
    partial void UpdateInventoryItem(InventoryItem instance);
    partial void DeleteInventoryItem(InventoryItem instance);
    partial void InsertInventoryRoom(InventoryRoom instance);
    partial void UpdateInventoryRoom(InventoryRoom instance);
    partial void DeleteInventoryRoom(InventoryRoom instance);
    partial void InsertItem(Item instance);
    partial void UpdateItem(Item instance);
    partial void DeleteItem(Item instance);
    partial void InsertOffer(Offer instance);
    partial void UpdateOffer(Offer instance);
    partial void DeleteOffer(Offer instance);
    partial void InsertRoom(Room instance);
    partial void UpdateRoom(Room instance);
    partial void DeleteRoom(Room instance);
    partial void InsertRoomItem(RoomItem instance);
    partial void UpdateRoomItem(RoomItem instance);
    partial void DeleteRoomItem(RoomItem instance);
    #endregion
		
		public DatabaseDataContext() : 
				base(global::Business.Properties.Settings.Default.ZipMovingConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DatabaseDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DatabaseDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DatabaseDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DatabaseDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Admin> Admins
		{
			get
			{
				return this.GetTable<Admin>();
			}
		}
		
		public System.Data.Linq.Table<ZipCode> ZipCodes
		{
			get
			{
				return this.GetTable<ZipCode>();
			}
		}
		
		public System.Data.Linq.Table<Calendar> Calendars
		{
			get
			{
				return this.GetTable<Calendar>();
			}
		}
		
		public System.Data.Linq.Table<Information> Informations
		{
			get
			{
				return this.GetTable<Information>();
			}
		}
		
		public System.Data.Linq.Table<InventoryItem> InventoryItems
		{
			get
			{
				return this.GetTable<InventoryItem>();
			}
		}
		
		public System.Data.Linq.Table<InventoryRoom> InventoryRooms
		{
			get
			{
				return this.GetTable<InventoryRoom>();
			}
		}
		
		public System.Data.Linq.Table<Item> Items
		{
			get
			{
				return this.GetTable<Item>();
			}
		}
		
		public System.Data.Linq.Table<Offer> Offers
		{
			get
			{
				return this.GetTable<Offer>();
			}
		}
		
		public System.Data.Linq.Table<Room> Rooms
		{
			get
			{
				return this.GetTable<Room>();
			}
		}
		
		public System.Data.Linq.Table<RoomItem> RoomItems
		{
			get
			{
				return this.GetTable<RoomItem>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Admin")]
	public partial class Admin : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Username;
		
		private string _Password;
		
		private string _Name;
		
		private string _Surname;
		
		private EntitySet<Offer> _Offers;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnUsernameChanging(string value);
    partial void OnUsernameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnSurnameChanging(string value);
    partial void OnSurnameChanged();
    #endregion
		
		public Admin()
		{
			this._Offers = new EntitySet<Offer>(new Action<Offer>(this.attach_Offers), new Action<Offer>(this.detach_Offers));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Username", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Username
		{
			get
			{
				return this._Username;
			}
			set
			{
				if ((this._Username != value))
				{
					this.OnUsernameChanging(value);
					this.SendPropertyChanging();
					this._Username = value;
					this.SendPropertyChanged("Username");
					this.OnUsernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(20)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Surname", DbType="NVarChar(20)")]
		public string Surname
		{
			get
			{
				return this._Surname;
			}
			set
			{
				if ((this._Surname != value))
				{
					this.OnSurnameChanging(value);
					this.SendPropertyChanging();
					this._Surname = value;
					this.SendPropertyChanged("Surname");
					this.OnSurnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Admin_Offer", Storage="_Offers", ThisKey="Id", OtherKey="AdminId")]
		public EntitySet<Offer> Offers
		{
			get
			{
				return this._Offers;
			}
			set
			{
				this._Offers.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Offers(Offer entity)
		{
			this.SendPropertyChanging();
			entity.Admin = this;
		}
		
		private void detach_Offers(Offer entity)
		{
			this.SendPropertyChanging();
			entity.Admin = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ZipCode")]
	public partial class ZipCode : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _ZipCode1;
		
		private string _Town;
		
		private string _State;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnZipCode1Changing(string value);
    partial void OnZipCode1Changed();
    partial void OnTownChanging(string value);
    partial void OnTownChanged();
    partial void OnStateChanging(string value);
    partial void OnStateChanged();
    #endregion
		
		public ZipCode()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="ZipCode", Storage="_ZipCode1", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string ZipCode1
		{
			get
			{
				return this._ZipCode1;
			}
			set
			{
				if ((this._ZipCode1 != value))
				{
					this.OnZipCode1Changing(value);
					this.SendPropertyChanging();
					this._ZipCode1 = value;
					this.SendPropertyChanged("ZipCode1");
					this.OnZipCode1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Town", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Town
		{
			get
			{
				return this._Town;
			}
			set
			{
				if ((this._Town != value))
				{
					this.OnTownChanging(value);
					this.SendPropertyChanging();
					this._Town = value;
					this.SendPropertyChanged("Town");
					this.OnTownChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_State", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string State
		{
			get
			{
				return this._State;
			}
			set
			{
				if ((this._State != value))
				{
					this.OnStateChanging(value);
					this.SendPropertyChanging();
					this._State = value;
					this.SendPropertyChanged("State");
					this.OnStateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Calendar")]
	public partial class Calendar : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.DateTime _Date;
		
		private bool _Morning;
		
		private bool _Afternoon;
		
		private bool _LateAfternoon;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnDateChanging(System.DateTime value);
    partial void OnDateChanged();
    partial void OnMorningChanging(bool value);
    partial void OnMorningChanged();
    partial void OnAfternoonChanging(bool value);
    partial void OnAfternoonChanged();
    partial void OnLateAfternoonChanging(bool value);
    partial void OnLateAfternoonChanged();
    #endregion
		
		public Calendar()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="Date NOT NULL")]
		public System.DateTime Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Morning", DbType="Bit NOT NULL")]
		public bool Morning
		{
			get
			{
				return this._Morning;
			}
			set
			{
				if ((this._Morning != value))
				{
					this.OnMorningChanging(value);
					this.SendPropertyChanging();
					this._Morning = value;
					this.SendPropertyChanged("Morning");
					this.OnMorningChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Afternoon", DbType="Bit NOT NULL")]
		public bool Afternoon
		{
			get
			{
				return this._Afternoon;
			}
			set
			{
				if ((this._Afternoon != value))
				{
					this.OnAfternoonChanging(value);
					this.SendPropertyChanging();
					this._Afternoon = value;
					this.SendPropertyChanged("Afternoon");
					this.OnAfternoonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LateAfternoon", DbType="Bit NOT NULL")]
		public bool LateAfternoon
		{
			get
			{
				return this._LateAfternoon;
			}
			set
			{
				if ((this._LateAfternoon != value))
				{
					this.OnLateAfternoonChanging(value);
					this.SendPropertyChanging();
					this._LateAfternoon = value;
					this.SendPropertyChanged("LateAfternoon");
					this.OnLateAfternoonChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Information")]
	public partial class Information : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Address;
		
		private string _ZipCode;
		
		private System.Nullable<decimal> _TypeOfBuilding;
		
		private bool _UOElevatorFlag;
		
		private string _UOElevatorDesc;
		
		private bool _UOStairsFlag;
		
		private string _UOStairsDesc;
		
		private string _TypeOfAccess;
		
		private System.Nullable<System.DateTime> _IntervalStart;
		
		private System.Nullable<System.DateTime> _IntervalEnd;
		
		private bool _FullSelfPack;
		
		private EntitySet<Offer> _Offers;
		
		private EntitySet<Offer> _Offers1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnZipCodeChanging(string value);
    partial void OnZipCodeChanged();
    partial void OnTypeOfBuildingChanging(System.Nullable<decimal> value);
    partial void OnTypeOfBuildingChanged();
    partial void OnUOElevatorFlagChanging(bool value);
    partial void OnUOElevatorFlagChanged();
    partial void OnUOElevatorDescChanging(string value);
    partial void OnUOElevatorDescChanged();
    partial void OnUOStairsFlagChanging(bool value);
    partial void OnUOStairsFlagChanged();
    partial void OnUOStairsDescChanging(string value);
    partial void OnUOStairsDescChanged();
    partial void OnTypeOfAccessChanging(string value);
    partial void OnTypeOfAccessChanged();
    partial void OnIntervalStartChanging(System.Nullable<System.DateTime> value);
    partial void OnIntervalStartChanged();
    partial void OnIntervalEndChanging(System.Nullable<System.DateTime> value);
    partial void OnIntervalEndChanged();
    partial void OnFullSelfPackChanging(bool value);
    partial void OnFullSelfPackChanged();
    #endregion
		
		public Information()
		{
			this._Offers = new EntitySet<Offer>(new Action<Offer>(this.attach_Offers), new Action<Offer>(this.detach_Offers));
			this._Offers1 = new EntitySet<Offer>(new Action<Offer>(this.attach_Offers1), new Action<Offer>(this.detach_Offers1));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ZipCode", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string ZipCode
		{
			get
			{
				return this._ZipCode;
			}
			set
			{
				if ((this._ZipCode != value))
				{
					this.OnZipCodeChanging(value);
					this.SendPropertyChanging();
					this._ZipCode = value;
					this.SendPropertyChanged("ZipCode");
					this.OnZipCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeOfBuilding", DbType="Decimal(2,0)")]
		public System.Nullable<decimal> TypeOfBuilding
		{
			get
			{
				return this._TypeOfBuilding;
			}
			set
			{
				if ((this._TypeOfBuilding != value))
				{
					this.OnTypeOfBuildingChanging(value);
					this.SendPropertyChanging();
					this._TypeOfBuilding = value;
					this.SendPropertyChanged("TypeOfBuilding");
					this.OnTypeOfBuildingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UOElevatorFlag", DbType="Bit NOT NULL")]
		public bool UOElevatorFlag
		{
			get
			{
				return this._UOElevatorFlag;
			}
			set
			{
				if ((this._UOElevatorFlag != value))
				{
					this.OnUOElevatorFlagChanging(value);
					this.SendPropertyChanging();
					this._UOElevatorFlag = value;
					this.SendPropertyChanged("UOElevatorFlag");
					this.OnUOElevatorFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UOElevatorDesc", DbType="NVarChar(200)")]
		public string UOElevatorDesc
		{
			get
			{
				return this._UOElevatorDesc;
			}
			set
			{
				if ((this._UOElevatorDesc != value))
				{
					this.OnUOElevatorDescChanging(value);
					this.SendPropertyChanging();
					this._UOElevatorDesc = value;
					this.SendPropertyChanged("UOElevatorDesc");
					this.OnUOElevatorDescChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UOStairsFlag", DbType="Bit NOT NULL")]
		public bool UOStairsFlag
		{
			get
			{
				return this._UOStairsFlag;
			}
			set
			{
				if ((this._UOStairsFlag != value))
				{
					this.OnUOStairsFlagChanging(value);
					this.SendPropertyChanging();
					this._UOStairsFlag = value;
					this.SendPropertyChanged("UOStairsFlag");
					this.OnUOStairsFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UOStairsDesc", DbType="NVarChar(200)")]
		public string UOStairsDesc
		{
			get
			{
				return this._UOStairsDesc;
			}
			set
			{
				if ((this._UOStairsDesc != value))
				{
					this.OnUOStairsDescChanging(value);
					this.SendPropertyChanging();
					this._UOStairsDesc = value;
					this.SendPropertyChanged("UOStairsDesc");
					this.OnUOStairsDescChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeOfAccess", DbType="NVarChar(200)")]
		public string TypeOfAccess
		{
			get
			{
				return this._TypeOfAccess;
			}
			set
			{
				if ((this._TypeOfAccess != value))
				{
					this.OnTypeOfAccessChanging(value);
					this.SendPropertyChanging();
					this._TypeOfAccess = value;
					this.SendPropertyChanged("TypeOfAccess");
					this.OnTypeOfAccessChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IntervalStart", DbType="DateTime")]
		public System.Nullable<System.DateTime> IntervalStart
		{
			get
			{
				return this._IntervalStart;
			}
			set
			{
				if ((this._IntervalStart != value))
				{
					this.OnIntervalStartChanging(value);
					this.SendPropertyChanging();
					this._IntervalStart = value;
					this.SendPropertyChanged("IntervalStart");
					this.OnIntervalStartChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IntervalEnd", DbType="DateTime")]
		public System.Nullable<System.DateTime> IntervalEnd
		{
			get
			{
				return this._IntervalEnd;
			}
			set
			{
				if ((this._IntervalEnd != value))
				{
					this.OnIntervalEndChanging(value);
					this.SendPropertyChanging();
					this._IntervalEnd = value;
					this.SendPropertyChanged("IntervalEnd");
					this.OnIntervalEndChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FullSelfPack", DbType="Bit NOT NULL")]
		public bool FullSelfPack
		{
			get
			{
				return this._FullSelfPack;
			}
			set
			{
				if ((this._FullSelfPack != value))
				{
					this.OnFullSelfPackChanging(value);
					this.SendPropertyChanging();
					this._FullSelfPack = value;
					this.SendPropertyChanged("FullSelfPack");
					this.OnFullSelfPackChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Information_Offer", Storage="_Offers", ThisKey="Id", OtherKey="InformationFromId")]
		public EntitySet<Offer> Offers
		{
			get
			{
				return this._Offers;
			}
			set
			{
				this._Offers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Information_Offer1", Storage="_Offers1", ThisKey="Id", OtherKey="InformationToId")]
		public EntitySet<Offer> Offers1
		{
			get
			{
				return this._Offers1;
			}
			set
			{
				this._Offers1.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Offers(Offer entity)
		{
			this.SendPropertyChanging();
			entity.Information = this;
		}
		
		private void detach_Offers(Offer entity)
		{
			this.SendPropertyChanging();
			entity.Information = null;
		}
		
		private void attach_Offers1(Offer entity)
		{
			this.SendPropertyChanging();
			entity.Information1 = this;
		}
		
		private void detach_Offers1(Offer entity)
		{
			this.SendPropertyChanging();
			entity.Information1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.InventoryItem")]
	public partial class InventoryItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _OfferId;
		
		private System.Nullable<int> _ItemId;
		
		private EntityRef<Item> _Item;
		
		private EntityRef<Offer> _Offer;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnOfferIdChanging(System.Nullable<int> value);
    partial void OnOfferIdChanged();
    partial void OnItemIdChanging(System.Nullable<int> value);
    partial void OnItemIdChanged();
    #endregion
		
		public InventoryItem()
		{
			this._Item = default(EntityRef<Item>);
			this._Offer = default(EntityRef<Offer>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OfferId", DbType="Int")]
		public System.Nullable<int> OfferId
		{
			get
			{
				return this._OfferId;
			}
			set
			{
				if ((this._OfferId != value))
				{
					if (this._Offer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOfferIdChanging(value);
					this.SendPropertyChanging();
					this._OfferId = value;
					this.SendPropertyChanged("OfferId");
					this.OnOfferIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemId", DbType="Int")]
		public System.Nullable<int> ItemId
		{
			get
			{
				return this._ItemId;
			}
			set
			{
				if ((this._ItemId != value))
				{
					if (this._Item.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnItemIdChanging(value);
					this.SendPropertyChanging();
					this._ItemId = value;
					this.SendPropertyChanged("ItemId");
					this.OnItemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Item_InventoryItem", Storage="_Item", ThisKey="ItemId", OtherKey="Id", IsForeignKey=true)]
		public Item Item
		{
			get
			{
				return this._Item.Entity;
			}
			set
			{
				Item previousValue = this._Item.Entity;
				if (((previousValue != value) 
							|| (this._Item.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Item.Entity = null;
						previousValue.InventoryItems.Remove(this);
					}
					this._Item.Entity = value;
					if ((value != null))
					{
						value.InventoryItems.Add(this);
						this._ItemId = value.Id;
					}
					else
					{
						this._ItemId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Item");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Offer_InventoryItem", Storage="_Offer", ThisKey="OfferId", OtherKey="Id", IsForeignKey=true)]
		public Offer Offer
		{
			get
			{
				return this._Offer.Entity;
			}
			set
			{
				Offer previousValue = this._Offer.Entity;
				if (((previousValue != value) 
							|| (this._Offer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Offer.Entity = null;
						previousValue.InventoryItems.Remove(this);
					}
					this._Offer.Entity = value;
					if ((value != null))
					{
						value.InventoryItems.Add(this);
						this._OfferId = value.Id;
					}
					else
					{
						this._OfferId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Offer");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.InventoryRoom")]
	public partial class InventoryRoom : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _OfferId;
		
		private System.Nullable<int> _RoomId;
		
		private EntityRef<Offer> _Offer;
		
		private EntityRef<Room> _Room;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnOfferIdChanging(System.Nullable<int> value);
    partial void OnOfferIdChanged();
    partial void OnRoomIdChanging(System.Nullable<int> value);
    partial void OnRoomIdChanged();
    #endregion
		
		public InventoryRoom()
		{
			this._Offer = default(EntityRef<Offer>);
			this._Room = default(EntityRef<Room>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OfferId", DbType="Int")]
		public System.Nullable<int> OfferId
		{
			get
			{
				return this._OfferId;
			}
			set
			{
				if ((this._OfferId != value))
				{
					if (this._Offer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOfferIdChanging(value);
					this.SendPropertyChanging();
					this._OfferId = value;
					this.SendPropertyChanged("OfferId");
					this.OnOfferIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoomId", DbType="Int")]
		public System.Nullable<int> RoomId
		{
			get
			{
				return this._RoomId;
			}
			set
			{
				if ((this._RoomId != value))
				{
					if (this._Room.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRoomIdChanging(value);
					this.SendPropertyChanging();
					this._RoomId = value;
					this.SendPropertyChanged("RoomId");
					this.OnRoomIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Offer_InventoryRoom", Storage="_Offer", ThisKey="OfferId", OtherKey="Id", IsForeignKey=true)]
		public Offer Offer
		{
			get
			{
				return this._Offer.Entity;
			}
			set
			{
				Offer previousValue = this._Offer.Entity;
				if (((previousValue != value) 
							|| (this._Offer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Offer.Entity = null;
						previousValue.InventoryRooms.Remove(this);
					}
					this._Offer.Entity = value;
					if ((value != null))
					{
						value.InventoryRooms.Add(this);
						this._OfferId = value.Id;
					}
					else
					{
						this._OfferId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Offer");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Room_InventoryRoom", Storage="_Room", ThisKey="RoomId", OtherKey="Id", IsForeignKey=true)]
		public Room Room
		{
			get
			{
				return this._Room.Entity;
			}
			set
			{
				Room previousValue = this._Room.Entity;
				if (((previousValue != value) 
							|| (this._Room.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Room.Entity = null;
						previousValue.InventoryRooms.Remove(this);
					}
					this._Room.Entity = value;
					if ((value != null))
					{
						value.InventoryRooms.Add(this);
						this._RoomId = value.Id;
					}
					else
					{
						this._RoomId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Room");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Item")]
	public partial class Item : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private string _Description;
		
		private string _IconLink;
		
		private System.Nullable<decimal> _Weight;
		
		private System.Nullable<decimal> _Cost;
		
		private System.Nullable<decimal> _Dimension;
		
		private EntitySet<InventoryItem> _InventoryItems;
		
		private EntitySet<RoomItem> _RoomItems;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnIconLinkChanging(string value);
    partial void OnIconLinkChanged();
    partial void OnWeightChanging(System.Nullable<decimal> value);
    partial void OnWeightChanged();
    partial void OnCostChanging(System.Nullable<decimal> value);
    partial void OnCostChanged();
    partial void OnDimensionChanging(System.Nullable<decimal> value);
    partial void OnDimensionChanged();
    #endregion
		
		public Item()
		{
			this._InventoryItems = new EntitySet<InventoryItem>(new Action<InventoryItem>(this.attach_InventoryItems), new Action<InventoryItem>(this.detach_InventoryItems));
			this._RoomItems = new EntitySet<RoomItem>(new Action<RoomItem>(this.attach_RoomItems), new Action<RoomItem>(this.detach_RoomItems));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(500)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IconLink", DbType="NVarChar(500)")]
		public string IconLink
		{
			get
			{
				return this._IconLink;
			}
			set
			{
				if ((this._IconLink != value))
				{
					this.OnIconLinkChanging(value);
					this.SendPropertyChanging();
					this._IconLink = value;
					this.SendPropertyChanged("IconLink");
					this.OnIconLinkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Weight", DbType="Decimal(10,2)")]
		public System.Nullable<decimal> Weight
		{
			get
			{
				return this._Weight;
			}
			set
			{
				if ((this._Weight != value))
				{
					this.OnWeightChanging(value);
					this.SendPropertyChanging();
					this._Weight = value;
					this.SendPropertyChanged("Weight");
					this.OnWeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cost", DbType="Decimal(10,2)")]
		public System.Nullable<decimal> Cost
		{
			get
			{
				return this._Cost;
			}
			set
			{
				if ((this._Cost != value))
				{
					this.OnCostChanging(value);
					this.SendPropertyChanging();
					this._Cost = value;
					this.SendPropertyChanged("Cost");
					this.OnCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dimension", DbType="Decimal(10,2)")]
		public System.Nullable<decimal> Dimension
		{
			get
			{
				return this._Dimension;
			}
			set
			{
				if ((this._Dimension != value))
				{
					this.OnDimensionChanging(value);
					this.SendPropertyChanging();
					this._Dimension = value;
					this.SendPropertyChanged("Dimension");
					this.OnDimensionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Item_InventoryItem", Storage="_InventoryItems", ThisKey="Id", OtherKey="ItemId")]
		public EntitySet<InventoryItem> InventoryItems
		{
			get
			{
				return this._InventoryItems;
			}
			set
			{
				this._InventoryItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Item_RoomItem", Storage="_RoomItems", ThisKey="Id", OtherKey="ItemId")]
		public EntitySet<RoomItem> RoomItems
		{
			get
			{
				return this._RoomItems;
			}
			set
			{
				this._RoomItems.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_InventoryItems(InventoryItem entity)
		{
			this.SendPropertyChanging();
			entity.Item = this;
		}
		
		private void detach_InventoryItems(InventoryItem entity)
		{
			this.SendPropertyChanging();
			entity.Item = null;
		}
		
		private void attach_RoomItems(RoomItem entity)
		{
			this.SendPropertyChanging();
			entity.Item = this;
		}
		
		private void detach_RoomItems(RoomItem entity)
		{
			this.SendPropertyChanging();
			entity.Item = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Offer")]
	public partial class Offer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Serial;
		
		private string _Name;
		
		private string _Surname;
		
		private string _Email;
		
		private decimal _Type;
		
		private System.DateTime _StartDate;
		
		private System.Nullable<System.DateTime> _EndDate;
		
		private bool _EstimateFlag;
		
		private System.Nullable<System.DateTime> _EstimateDate;
		
		private System.Nullable<decimal> _EstimateTime;
		
		private System.Nullable<int> _InformationFromId;
		
		private System.Nullable<int> _InformationToId;
		
		private System.Nullable<int> _AdminId;
		
		private System.Nullable<decimal> _WhatToMove;
		
		private System.Nullable<decimal> _WhoIsPresentAtPickup;
		
		private System.Nullable<decimal> _AdditionStop;
		
		private System.Nullable<decimal> _RegureasCOI;
		
		private string _AdditionalService;
		
		private string _HowDidYouFindUs;
		
		private bool _VideoFlag;
		
		private string _VideoLink;
		
		private bool _InventoryFlag;
		
		private EntitySet<InventoryItem> _InventoryItems;
		
		private EntitySet<InventoryRoom> _InventoryRooms;
		
		private EntityRef<Admin> _Admin;
		
		private EntityRef<Information> _Information;
		
		private EntityRef<Information> _Information1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnSerialChanging(string value);
    partial void OnSerialChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnSurnameChanging(string value);
    partial void OnSurnameChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnTypeChanging(decimal value);
    partial void OnTypeChanged();
    partial void OnStartDateChanging(System.DateTime value);
    partial void OnStartDateChanged();
    partial void OnEndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEndDateChanged();
    partial void OnEstimateFlagChanging(bool value);
    partial void OnEstimateFlagChanged();
    partial void OnEstimateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEstimateDateChanged();
    partial void OnEstimateTimeChanging(System.Nullable<decimal> value);
    partial void OnEstimateTimeChanged();
    partial void OnInformationFromIdChanging(System.Nullable<int> value);
    partial void OnInformationFromIdChanged();
    partial void OnInformationToIdChanging(System.Nullable<int> value);
    partial void OnInformationToIdChanged();
    partial void OnAdminIdChanging(System.Nullable<int> value);
    partial void OnAdminIdChanged();
    partial void OnWhatToMoveChanging(System.Nullable<decimal> value);
    partial void OnWhatToMoveChanged();
    partial void OnWhoIsPresentAtPickupChanging(System.Nullable<decimal> value);
    partial void OnWhoIsPresentAtPickupChanged();
    partial void OnAdditionStopChanging(System.Nullable<decimal> value);
    partial void OnAdditionStopChanged();
    partial void OnRegureasCOIChanging(System.Nullable<decimal> value);
    partial void OnRegureasCOIChanged();
    partial void OnAdditionalServiceChanging(string value);
    partial void OnAdditionalServiceChanged();
    partial void OnHowDidYouFindUsChanging(string value);
    partial void OnHowDidYouFindUsChanged();
    partial void OnVideoFlagChanging(bool value);
    partial void OnVideoFlagChanged();
    partial void OnVideoLinkChanging(string value);
    partial void OnVideoLinkChanged();
    partial void OnInventoryFlagChanging(bool value);
    partial void OnInventoryFlagChanged();
    #endregion
		
		public Offer()
		{
			this._InventoryItems = new EntitySet<InventoryItem>(new Action<InventoryItem>(this.attach_InventoryItems), new Action<InventoryItem>(this.detach_InventoryItems));
			this._InventoryRooms = new EntitySet<InventoryRoom>(new Action<InventoryRoom>(this.attach_InventoryRooms), new Action<InventoryRoom>(this.detach_InventoryRooms));
			this._Admin = default(EntityRef<Admin>);
			this._Information = default(EntityRef<Information>);
			this._Information1 = default(EntityRef<Information>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Serial", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string Serial
		{
			get
			{
				return this._Serial;
			}
			set
			{
				if ((this._Serial != value))
				{
					this.OnSerialChanging(value);
					this.SendPropertyChanging();
					this._Serial = value;
					this.SendPropertyChanged("Serial");
					this.OnSerialChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(20)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Surname", DbType="NVarChar(20)")]
		public string Surname
		{
			get
			{
				return this._Surname;
			}
			set
			{
				if ((this._Surname != value))
				{
					this.OnSurnameChanging(value);
					this.SendPropertyChanging();
					this._Surname = value;
					this.SendPropertyChanged("Surname");
					this.OnSurnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="Decimal(2,0) NOT NULL")]
		public decimal Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="DateTime NOT NULL")]
		public System.DateTime StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this.OnStartDateChanging(value);
					this.SendPropertyChanging();
					this._StartDate = value;
					this.SendPropertyChanged("StartDate");
					this.OnStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if ((this._EndDate != value))
				{
					this.OnEndDateChanging(value);
					this.SendPropertyChanging();
					this._EndDate = value;
					this.SendPropertyChanged("EndDate");
					this.OnEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EstimateFlag", DbType="Bit NOT NULL")]
		public bool EstimateFlag
		{
			get
			{
				return this._EstimateFlag;
			}
			set
			{
				if ((this._EstimateFlag != value))
				{
					this.OnEstimateFlagChanging(value);
					this.SendPropertyChanging();
					this._EstimateFlag = value;
					this.SendPropertyChanged("EstimateFlag");
					this.OnEstimateFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EstimateDate", DbType="Date")]
		public System.Nullable<System.DateTime> EstimateDate
		{
			get
			{
				return this._EstimateDate;
			}
			set
			{
				if ((this._EstimateDate != value))
				{
					this.OnEstimateDateChanging(value);
					this.SendPropertyChanging();
					this._EstimateDate = value;
					this.SendPropertyChanged("EstimateDate");
					this.OnEstimateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EstimateTime", DbType="Decimal(2,0)")]
		public System.Nullable<decimal> EstimateTime
		{
			get
			{
				return this._EstimateTime;
			}
			set
			{
				if ((this._EstimateTime != value))
				{
					this.OnEstimateTimeChanging(value);
					this.SendPropertyChanging();
					this._EstimateTime = value;
					this.SendPropertyChanged("EstimateTime");
					this.OnEstimateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InformationFromId", DbType="Int")]
		public System.Nullable<int> InformationFromId
		{
			get
			{
				return this._InformationFromId;
			}
			set
			{
				if ((this._InformationFromId != value))
				{
					if (this._Information.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInformationFromIdChanging(value);
					this.SendPropertyChanging();
					this._InformationFromId = value;
					this.SendPropertyChanged("InformationFromId");
					this.OnInformationFromIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InformationToId", DbType="Int")]
		public System.Nullable<int> InformationToId
		{
			get
			{
				return this._InformationToId;
			}
			set
			{
				if ((this._InformationToId != value))
				{
					if (this._Information1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInformationToIdChanging(value);
					this.SendPropertyChanging();
					this._InformationToId = value;
					this.SendPropertyChanged("InformationToId");
					this.OnInformationToIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminId", DbType="Int")]
		public System.Nullable<int> AdminId
		{
			get
			{
				return this._AdminId;
			}
			set
			{
				if ((this._AdminId != value))
				{
					if (this._Admin.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAdminIdChanging(value);
					this.SendPropertyChanging();
					this._AdminId = value;
					this.SendPropertyChanged("AdminId");
					this.OnAdminIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WhatToMove", DbType="Decimal(2,0)")]
		public System.Nullable<decimal> WhatToMove
		{
			get
			{
				return this._WhatToMove;
			}
			set
			{
				if ((this._WhatToMove != value))
				{
					this.OnWhatToMoveChanging(value);
					this.SendPropertyChanging();
					this._WhatToMove = value;
					this.SendPropertyChanged("WhatToMove");
					this.OnWhatToMoveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WhoIsPresentAtPickup", DbType="Decimal(2,0)")]
		public System.Nullable<decimal> WhoIsPresentAtPickup
		{
			get
			{
				return this._WhoIsPresentAtPickup;
			}
			set
			{
				if ((this._WhoIsPresentAtPickup != value))
				{
					this.OnWhoIsPresentAtPickupChanging(value);
					this.SendPropertyChanging();
					this._WhoIsPresentAtPickup = value;
					this.SendPropertyChanged("WhoIsPresentAtPickup");
					this.OnWhoIsPresentAtPickupChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdditionStop", DbType="Decimal(2,0)")]
		public System.Nullable<decimal> AdditionStop
		{
			get
			{
				return this._AdditionStop;
			}
			set
			{
				if ((this._AdditionStop != value))
				{
					this.OnAdditionStopChanging(value);
					this.SendPropertyChanging();
					this._AdditionStop = value;
					this.SendPropertyChanged("AdditionStop");
					this.OnAdditionStopChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegureasCOI", DbType="Decimal(2,0)")]
		public System.Nullable<decimal> RegureasCOI
		{
			get
			{
				return this._RegureasCOI;
			}
			set
			{
				if ((this._RegureasCOI != value))
				{
					this.OnRegureasCOIChanging(value);
					this.SendPropertyChanging();
					this._RegureasCOI = value;
					this.SendPropertyChanged("RegureasCOI");
					this.OnRegureasCOIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdditionalService", DbType="VarChar(500)")]
		public string AdditionalService
		{
			get
			{
				return this._AdditionalService;
			}
			set
			{
				if ((this._AdditionalService != value))
				{
					this.OnAdditionalServiceChanging(value);
					this.SendPropertyChanging();
					this._AdditionalService = value;
					this.SendPropertyChanged("AdditionalService");
					this.OnAdditionalServiceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HowDidYouFindUs", DbType="VarChar(50)")]
		public string HowDidYouFindUs
		{
			get
			{
				return this._HowDidYouFindUs;
			}
			set
			{
				if ((this._HowDidYouFindUs != value))
				{
					this.OnHowDidYouFindUsChanging(value);
					this.SendPropertyChanging();
					this._HowDidYouFindUs = value;
					this.SendPropertyChanged("HowDidYouFindUs");
					this.OnHowDidYouFindUsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VideoFlag", DbType="Bit NOT NULL")]
		public bool VideoFlag
		{
			get
			{
				return this._VideoFlag;
			}
			set
			{
				if ((this._VideoFlag != value))
				{
					this.OnVideoFlagChanging(value);
					this.SendPropertyChanging();
					this._VideoFlag = value;
					this.SendPropertyChanged("VideoFlag");
					this.OnVideoFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VideoLink", DbType="NVarChar(500)")]
		public string VideoLink
		{
			get
			{
				return this._VideoLink;
			}
			set
			{
				if ((this._VideoLink != value))
				{
					this.OnVideoLinkChanging(value);
					this.SendPropertyChanging();
					this._VideoLink = value;
					this.SendPropertyChanged("VideoLink");
					this.OnVideoLinkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InventoryFlag", DbType="Bit NOT NULL")]
		public bool InventoryFlag
		{
			get
			{
				return this._InventoryFlag;
			}
			set
			{
				if ((this._InventoryFlag != value))
				{
					this.OnInventoryFlagChanging(value);
					this.SendPropertyChanging();
					this._InventoryFlag = value;
					this.SendPropertyChanged("InventoryFlag");
					this.OnInventoryFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Offer_InventoryItem", Storage="_InventoryItems", ThisKey="Id", OtherKey="OfferId")]
		public EntitySet<InventoryItem> InventoryItems
		{
			get
			{
				return this._InventoryItems;
			}
			set
			{
				this._InventoryItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Offer_InventoryRoom", Storage="_InventoryRooms", ThisKey="Id", OtherKey="OfferId")]
		public EntitySet<InventoryRoom> InventoryRooms
		{
			get
			{
				return this._InventoryRooms;
			}
			set
			{
				this._InventoryRooms.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Admin_Offer", Storage="_Admin", ThisKey="AdminId", OtherKey="Id", IsForeignKey=true, DeleteRule="SET NULL")]
		public Admin Admin
		{
			get
			{
				return this._Admin.Entity;
			}
			set
			{
				Admin previousValue = this._Admin.Entity;
				if (((previousValue != value) 
							|| (this._Admin.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Admin.Entity = null;
						previousValue.Offers.Remove(this);
					}
					this._Admin.Entity = value;
					if ((value != null))
					{
						value.Offers.Add(this);
						this._AdminId = value.Id;
					}
					else
					{
						this._AdminId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Admin");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Information_Offer", Storage="_Information", ThisKey="InformationFromId", OtherKey="Id", IsForeignKey=true)]
		public Information Information
		{
			get
			{
				return this._Information.Entity;
			}
			set
			{
				Information previousValue = this._Information.Entity;
				if (((previousValue != value) 
							|| (this._Information.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Information.Entity = null;
						previousValue.Offers.Remove(this);
					}
					this._Information.Entity = value;
					if ((value != null))
					{
						value.Offers.Add(this);
						this._InformationFromId = value.Id;
					}
					else
					{
						this._InformationFromId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Information");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Information_Offer1", Storage="_Information1", ThisKey="InformationToId", OtherKey="Id", IsForeignKey=true)]
		public Information Information1
		{
			get
			{
				return this._Information1.Entity;
			}
			set
			{
				Information previousValue = this._Information1.Entity;
				if (((previousValue != value) 
							|| (this._Information1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Information1.Entity = null;
						previousValue.Offers1.Remove(this);
					}
					this._Information1.Entity = value;
					if ((value != null))
					{
						value.Offers1.Add(this);
						this._InformationToId = value.Id;
					}
					else
					{
						this._InformationToId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Information1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_InventoryItems(InventoryItem entity)
		{
			this.SendPropertyChanging();
			entity.Offer = this;
		}
		
		private void detach_InventoryItems(InventoryItem entity)
		{
			this.SendPropertyChanging();
			entity.Offer = null;
		}
		
		private void attach_InventoryRooms(InventoryRoom entity)
		{
			this.SendPropertyChanging();
			entity.Offer = this;
		}
		
		private void detach_InventoryRooms(InventoryRoom entity)
		{
			this.SendPropertyChanging();
			entity.Offer = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Room")]
	public partial class Room : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private string _Description;
		
		private string _IconLink;
		
		private EntitySet<InventoryRoom> _InventoryRooms;
		
		private EntitySet<RoomItem> _RoomItems;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnIconLinkChanging(string value);
    partial void OnIconLinkChanged();
    #endregion
		
		public Room()
		{
			this._InventoryRooms = new EntitySet<InventoryRoom>(new Action<InventoryRoom>(this.attach_InventoryRooms), new Action<InventoryRoom>(this.detach_InventoryRooms));
			this._RoomItems = new EntitySet<RoomItem>(new Action<RoomItem>(this.attach_RoomItems), new Action<RoomItem>(this.detach_RoomItems));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(500)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IconLink", DbType="NVarChar(500)")]
		public string IconLink
		{
			get
			{
				return this._IconLink;
			}
			set
			{
				if ((this._IconLink != value))
				{
					this.OnIconLinkChanging(value);
					this.SendPropertyChanging();
					this._IconLink = value;
					this.SendPropertyChanged("IconLink");
					this.OnIconLinkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Room_InventoryRoom", Storage="_InventoryRooms", ThisKey="Id", OtherKey="RoomId")]
		public EntitySet<InventoryRoom> InventoryRooms
		{
			get
			{
				return this._InventoryRooms;
			}
			set
			{
				this._InventoryRooms.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Room_RoomItem", Storage="_RoomItems", ThisKey="Id", OtherKey="RoomId")]
		public EntitySet<RoomItem> RoomItems
		{
			get
			{
				return this._RoomItems;
			}
			set
			{
				this._RoomItems.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_InventoryRooms(InventoryRoom entity)
		{
			this.SendPropertyChanging();
			entity.Room = this;
		}
		
		private void detach_InventoryRooms(InventoryRoom entity)
		{
			this.SendPropertyChanging();
			entity.Room = null;
		}
		
		private void attach_RoomItems(RoomItem entity)
		{
			this.SendPropertyChanging();
			entity.Room = this;
		}
		
		private void detach_RoomItems(RoomItem entity)
		{
			this.SendPropertyChanging();
			entity.Room = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RoomItem")]
	public partial class RoomItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _RoomId;
		
		private System.Nullable<int> _ItemId;
		
		private EntityRef<Item> _Item;
		
		private EntityRef<Room> _Room;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnRoomIdChanging(System.Nullable<int> value);
    partial void OnRoomIdChanged();
    partial void OnItemIdChanging(System.Nullable<int> value);
    partial void OnItemIdChanged();
    #endregion
		
		public RoomItem()
		{
			this._Item = default(EntityRef<Item>);
			this._Room = default(EntityRef<Room>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoomId", DbType="Int")]
		public System.Nullable<int> RoomId
		{
			get
			{
				return this._RoomId;
			}
			set
			{
				if ((this._RoomId != value))
				{
					if (this._Room.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRoomIdChanging(value);
					this.SendPropertyChanging();
					this._RoomId = value;
					this.SendPropertyChanged("RoomId");
					this.OnRoomIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemId", DbType="Int")]
		public System.Nullable<int> ItemId
		{
			get
			{
				return this._ItemId;
			}
			set
			{
				if ((this._ItemId != value))
				{
					if (this._Item.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnItemIdChanging(value);
					this.SendPropertyChanging();
					this._ItemId = value;
					this.SendPropertyChanged("ItemId");
					this.OnItemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Item_RoomItem", Storage="_Item", ThisKey="ItemId", OtherKey="Id", IsForeignKey=true)]
		public Item Item
		{
			get
			{
				return this._Item.Entity;
			}
			set
			{
				Item previousValue = this._Item.Entity;
				if (((previousValue != value) 
							|| (this._Item.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Item.Entity = null;
						previousValue.RoomItems.Remove(this);
					}
					this._Item.Entity = value;
					if ((value != null))
					{
						value.RoomItems.Add(this);
						this._ItemId = value.Id;
					}
					else
					{
						this._ItemId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Item");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Room_RoomItem", Storage="_Room", ThisKey="RoomId", OtherKey="Id", IsForeignKey=true)]
		public Room Room
		{
			get
			{
				return this._Room.Entity;
			}
			set
			{
				Room previousValue = this._Room.Entity;
				if (((previousValue != value) 
							|| (this._Room.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Room.Entity = null;
						previousValue.RoomItems.Remove(this);
					}
					this._Room.Entity = value;
					if ((value != null))
					{
						value.RoomItems.Add(this);
						this._RoomId = value.Id;
					}
					else
					{
						this._RoomId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Room");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
